{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\LucidFiles\\\\semantic-file-explorer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport ResultsList from './components/ResultsList';\nimport PreviewPane from './components/PreviewPane';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedResult, setSelectedResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [indexedFolders, setIndexedFolders] = useState([]);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  // Check if electronAPI is available\n  const isElectron = window.electronAPI !== undefined;\n  useEffect(() => {\n    // Load indexed folders on startup\n    loadIndexedFolders();\n  }, []);\n  const loadIndexedFolders = async () => {\n    try {\n      // This will call your backend API\n      if (window.api) {\n        const response = await fetch('http://localhost:3001/folders');\n        if (response.ok) {\n          const folders = await response.json();\n          setIndexedFolders(folders);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load indexed folders:', error);\n    }\n  };\n  const handleSearch = async query => {\n    if (!query.trim()) {\n      setSearchResults([]);\n      return;\n    }\n    setIsLoading(true);\n    setSearchQuery(query);\n    try {\n      if (window.api) {\n        const results = await window.api.search(query);\n        setSearchResults(results);\n      } else {\n        // Fallback for development without Electron\n        console.log('Searching for:', query);\n        // Mock results for development\n        setSearchResults([{\n          id: '1',\n          filename: 'sample-document.pdf',\n          path: '/path/to/sample-document.pdf',\n          snippet: 'This is a sample document containing information about...',\n          score: 0.95\n        }]);\n      }\n    } catch (error) {\n      console.error('Search failed:', error);\n      setSearchResults([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFolderAdd = async () => {\n    if (!isElectron || !window.electronAPI) {\n      alert('Folder selection is only available in the desktop app');\n      return;\n    }\n    try {\n      const folderPath = await window.electronAPI.selectFolder();\n      if (folderPath && window.api) {\n        setIsLoading(true);\n        const result = await window.api.addFolder(folderPath);\n        if (result.success) {\n          await loadIndexedFolders();\n          alert(`Successfully added folder: ${folderPath}`);\n        } else {\n          alert(`Failed to add folder: ${result.error}`);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to add folder:', error);\n      alert('Failed to add folder');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleResultSelect = result => {\n    setSelectedResult(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onMenuClick: () => setSidebarOpen(!sidebarOpen),\n      onAddFolder: handleFolderAdd,\n      isElectron: isElectron\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        isOpen: sidebarOpen,\n        onClose: () => setSidebarOpen(false),\n        indexedFolders: indexedFolders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-200 bg-white\",\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {\n            onSearch: handleSearch,\n            isLoading: isLoading,\n            placeholder: \"Search your files semantically...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-1 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2 border-r border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(ResultsList, {\n              results: searchResults,\n              onResultSelect: handleResultSelect,\n              selectedResult: selectedResult,\n              isLoading: isLoading,\n              query: searchQuery\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2\",\n            children: /*#__PURE__*/_jsxDEV(PreviewPane, {\n              result: selectedResult,\n              isElectron: isElectron\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zmx7q/gSihhkOZ9Uu73PJtt/Lxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","ResultsList","PreviewPane","Sidebar","Header","jsxDEV","_jsxDEV","App","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedResult","setSelectedResult","isLoading","setIsLoading","indexedFolders","setIndexedFolders","sidebarOpen","setSidebarOpen","isElectron","window","electronAPI","undefined","loadIndexedFolders","api","response","fetch","ok","folders","json","error","console","handleSearch","query","trim","results","search","log","id","filename","path","snippet","score","handleFolderAdd","alert","folderPath","selectFolder","result","addFolder","success","handleResultSelect","className","children","onMenuClick","onAddFolder","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onSearch","placeholder","onResultSelect","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/LucidFiles/semantic-file-explorer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport ResultsList from './components/ResultsList';\r\nimport PreviewPane from './components/PreviewPane';\r\nimport Sidebar from './components/Sidebar';\r\nimport Header from './components/Header';\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedResult, setSelectedResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [indexedFolders, setIndexedFolders] = useState([]);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  // Check if electronAPI is available\r\n  const isElectron = window.electronAPI !== undefined;\r\n\r\n  useEffect(() => {\r\n    // Load indexed folders on startup\r\n    loadIndexedFolders();\r\n  }, []);\r\n\r\n  const loadIndexedFolders = async () => {\r\n    try {\r\n      // This will call your backend API\r\n      if (window.api) {\r\n        const response = await fetch('http://localhost:3001/folders');\r\n        if (response.ok) {\r\n          const folders = await response.json();\r\n          setIndexedFolders(folders);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load indexed folders:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    if (!query.trim()) {\r\n      setSearchResults([]);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setSearchQuery(query);\r\n\r\n    try {\r\n      if (window.api) {\r\n        const results = await window.api.search(query);\r\n        setSearchResults(results);\r\n      } else {\r\n        // Fallback for development without Electron\r\n        console.log('Searching for:', query);\r\n        // Mock results for development\r\n        setSearchResults([\r\n          {\r\n            id: '1',\r\n            filename: 'sample-document.pdf',\r\n            path: '/path/to/sample-document.pdf',\r\n            snippet: 'This is a sample document containing information about...',\r\n            score: 0.95\r\n          }\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Search failed:', error);\r\n      setSearchResults([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFolderAdd = async () => {\r\n    if (!isElectron || !window.electronAPI) {\r\n      alert('Folder selection is only available in the desktop app');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const folderPath = await window.electronAPI.selectFolder();\r\n      if (folderPath && window.api) {\r\n        setIsLoading(true);\r\n        const result = await window.api.addFolder(folderPath);\r\n        if (result.success) {\r\n          await loadIndexedFolders();\r\n          alert(`Successfully added folder: ${folderPath}`);\r\n        } else {\r\n          alert(`Failed to add folder: ${result.error}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to add folder:', error);\r\n      alert('Failed to add folder');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResultSelect = (result) => {\r\n    setSelectedResult(result);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col bg-gray-50\">\r\n      <Header \r\n        onMenuClick={() => setSidebarOpen(!sidebarOpen)}\r\n        onAddFolder={handleFolderAdd}\r\n        isElectron={isElectron}\r\n      />\r\n      \r\n      <div className=\"flex flex-1 overflow-hidden\">\r\n        <Sidebar \r\n          isOpen={sidebarOpen}\r\n          onClose={() => setSidebarOpen(false)}\r\n          indexedFolders={indexedFolders}\r\n        />\r\n        \r\n        <main className=\"flex-1 flex flex-col\">\r\n          <div className=\"p-4 border-b border-gray-200 bg-white\">\r\n            <SearchBar \r\n              onSearch={handleSearch}\r\n              isLoading={isLoading}\r\n              placeholder=\"Search your files semantically...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex flex-1 overflow-hidden\">\r\n            <div className=\"w-1/2 border-r border-gray-200\">\r\n              <ResultsList \r\n                results={searchResults}\r\n                onResultSelect={handleResultSelect}\r\n                selectedResult={selectedResult}\r\n                isLoading={isLoading}\r\n                query={searchQuery}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"w-1/2\">\r\n              <PreviewPane \r\n                result={selectedResult}\r\n                isElectron={isElectron}\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}